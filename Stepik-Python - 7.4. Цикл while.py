# ******************************************************************************************************
# 7.4. Цикл while
# ******************************************************************************************************

# *** До КОНЦА 1***
# На вход программе подается последовательность слов, каждое слово на отдельной строке. Концом
# последовательности является слово «КОНЕЦ» (без кавычек). Напишите программу, которая выводит члены
# данной последовательности.
# Формат входных данных: На вход программе подается последовательность слов, каждое слово на отдельной строке.
# Формат выходных данных: Программа должна вывести члены данной последовательности.

# text = input()
# while text != 'КОНЕЦ':
#     print(text)
#     text = input()
# -----------------------------------------------------------------------------------------------------

# *** До КОНЦА 2***
# На вход программе подается последовательность слов, каждое слово на отдельной строке. Концом
# последовательности является слово «КОНЕЦ» или «конец» (большими или маленькими буквами, без кавычек).
# Напишите программу, которая выводит члены данной последовательности.
# Формат входных данных: На вход программе подается последовательность слов, каждое слово на отдельной строке.
# Формат выходных данных: Программа должна вывести члены данной последовательности.

# text = input()
# while text != 'КОНЕЦ' and text != 'конец':
#     print(text)
#     text = input()
# -----------------------------------------------------------------------------------------------------

# *** Количество членов***
# На вход программе подается последовательность слов, каждое слово на отдельной строке. Концом
# последовательности является одно из трех слов: «стоп», «хватит», «достаточно» (маленькими буквами,
# без кавычек). Напишите программу, которая выводит общее количество членов данной последовательности.
# Формат входных данных: На вход программе подается последовательность слов, каждое слово на отдельной строке.
# Формат выходных данных: Программа должна вывести общее количество членов данной последовательности.

# text = input()
# count = 0
# while text != 'стоп' and text != 'хватит' and text != 'достаточно':
#     count += 1
#     text = input()
# print(count)
# -----------------------------------------------------------------------------------------------------

# *** Пока делимся ***
# На вход программе подается последовательность целых чисел делящихся на 7, каждое число на отдельной строке. Концом
# последовательности является любое число не делящееся на 7. Напишите программу, которая выводит члены
# данной последовательности.
# Формат входных данных: На вход программе подается последовательность чисел, каждое число на отдельной строке.
# Формат выходных данных: Программа должна вывести члены данной последовательности.
# num = int(input())
# while num % 7 == 0:
#     print(num)
#     num = int(input())
# -----------------------------------------------------------------------------------------------------

# ***Сумма чисел ***
# На вход программе подается последовательность целых чисел, каждое число на отдельной строке. Концом
# последовательности является любое отрицательное число. Напишите программу, которая выводит сумму всех
# членов данной последовательности.
# Формат входных данных: На вход программе подается последовательность чисел, каждое число на отдельной строке.
# Формат выходных данных: Программа должна вывести сумму членов данной последовательности.
# num = int(input())
# summ = 0
# while num >= 0:
#     summ += num
#     num = int(input())
# print(summ)
# -----------------------------------------------------------------------------------------------------

# *** Количество пятерок ***
# На вход программе подается последовательность целых чисел от 1 до 5, характеризующее оценку ученика,
# каждое число на отдельной строке. Концом последовательности является любое отрицательное число, либо
# число большее 5. Напишите программу, которая выводит количество пятерок.
# Формат входных данных: На вход программе подается последовательность чисел, каждое число на отдельной строке.
# Формат выходных данных: Программа должна вывести количество пятерок.

# num = int(input())
# total = 0
# while 5 >= num >= 1:
#     if num == 5:
#         total += 1
#     num = int(input())
# print(total)
# -----------------------------------------------------------------------------------------------------

# *** Ведьмаку заплатите чеканной монетой ***
# Всем известно, что ведьмак способен одолеть любых чудовищ, однако его услуги обойдутся недешево, к тому же ведьмак
# не принимает купюры, он принимает только чеканные монеты. В мире ведьмака существуют монеты с номиналами
# 1, 5, 10, 25.
# Напишите программу, которая определяет какое минимальное количество чеканных монет нужно заплатить ведьмаку.
# Формат входных данных: На вход программе подается одно натуральное число, цена за услугу ведьмака.
# Формат выходных данных: Программа должна вывести минимально возможное количество чеканных монет для оплаты.
# num = int(input())
# total = 0
# while num >= 25:
#     total += num // 25
#     num -= 25 * (num // 25)
# while num >= 10:
#     total += num // 10
#     num -= 10 * (num // 10)
# while num >= 5:
#     total += num // 5
#     num -= 5 * (num // 5)
# print(total + num)
#
# ИЛИ:
# num, total = int(input()), 0
# for i in [25, 10, 5, 1]:
#     total += num // i
#     num %= i
# print(total)
#
# n = int(input())
# total = n//25 + (n%25)//10 +((n%25)%10)//5 +(((n%25)%10)%5)
# print(total)
#
# n = int(input())
# summ = 0
# while n >= 25:
#     summ += 1
#     n -= 25
# while n >= 10:
#     summ += 1
#     n -= 10
# while n >= 5:
#     summ += 1
#     n -= 5
# while n >= 1:
#     summ += 1
#     n -= 1
# print(summ)
# -----------------------------------------------------------------------------------------------------

# ******************************************************************************************************
# 7.5 Цикл while: обработка цифр числа
# ******************************************************************************************************

# Обратный порядок 1
# Дано натуральное число. Напишите программу, которая выводит его цифры в столбик в обратном порядке.
# Формат входных данных: На вход программе подается одно натуральное число.
# Формат выходных данных: Программа должна вывести цифры введенного числа в столбик в обратном порядке.

# n = int(input())
# while n != 0:
#     last_digit = n % 10
#     print(last_digit)
#     n = n // 10
# -----------------------------------------------------------------------------------------------------

# Обратный порядок 2
# Дано натуральное число. Напишите программу, которая меняет порядок цифр числа на обратный.
# Формат входных данных: На вход программе подается одно натуральное число.
# Формат выходных данных: Программа должна вывести число записанное в обратном порядке.

# n = int(input())
# s = ''
# while n != 0:
#     last_digit = n % 10
#     s = s + str(last_digit)
#     n = n // 10
# print(s)
#
# n = int(input())
# while n != 0:
#     last_digit = n % 10
#     n = n // 10
#     print(last_digit, end="")
# -----------------------------------------------------------------------------------------------------

# *** max и min ***
# Дано натуральное число n, (n≥10). Напишите программу, которая определяет его максимальную и минимальную цифры.
# Формат входных данных: На вход программе подается одно натуральное число.
# Формат выходных данных: Программа должна вывести максимальную и минимальную цифры введенного числа
# (с поясняющей надписью).
# n = int(input())
# max_digit, min_digit = 0, 9
# while n != 0:
#     last_digit = n % 10
#     max_digit = max(max_digit, last_digit)
#     min_digit = min(min_digit, last_digit)
#     n = n // 10
# print('Максимальная цифра равна', max_digit)
# print('Минимальная цифра равна', min_digit)
#
#
# x = str(input())
# print('Максимальная цифра равна', max(x))
# print('Минимальная цифра равна', min(x))
# -----------------------------------------------------------------------------------------------------

# *** Все вместе ***
# Дано натуральное число. Напишите программу, которая вычисляет:
# - сумму его цифр;
# - количество цифр в нем;
# - произведение его цифр;
# - среднее арифметическое его цифр;
# - его первую цифру;
# - сумму его первой и последней цифры.
# Формат входных данных: На вход программе подается одно натуральное число.
# Формат выходных данных: Программа должна вывести значения указанных величин в указанном порядке.
# n = int(input())
# summ, count, mult, first_digit = 0, 0, 1, 0
# last_digit = n % 10
# while n != 0:
#     digit = n % 10
#     summ += digit
#     count += 1
#     mult *= digit
#     first_digit = digit
#     n = n // 10
# average = summ / count
# print(summ, count, mult, average, first_digit, first_digit + last_digit, sep='\n')
# -----------------------------------------------------------------------------------------------------

# *** Вторая цифра ***
# Дано натуральное число n, (n>9). Напишите программу, которая определяет его вторую (с начала) цифру.
# Формат входных данных: На вход программе подается одно натуральное число, состоящее как минимум из двух цифр.
# Формат выходных данных: Программа должна вывести его вторую (с начала) цифру.
# n = int(input())
# len_n = len(str(n))
# while n != 0:
#     if len_n == 2:
#         print(n % 10)
#     n = n // 10
#     len_n -= 1
#
#
# n = int(input())
# while n // 10 >= 1:
#     x = n % 10
#     n = n // 10
# print(x)
# -----------------------------------------------------------------------------------------------------

# *** Одинаковые цифры ***
# Дано натуральное число. Напишите программу, которая определяет, состоит ли указанное число из одинаковых цифр.
# Формат входных данных: На вход программе подается одно натуральное число.
# Формат выходных данных: Программа должна вывести «YES» если число состоит из одинаковых цифр и
# «NO» в противном случае.
# n = int(input())
# last_digit = n % 10
# flag = 'YES'
# while n != 0:
#     digit = n % 10
#     n = n // 10
#     if last_digit != digit:
#         flag = 'NO'
# print(flag)
#
#
# num = int(input())
# if str(num) == str(str(num % 10) * len(str(num))):
#    print('YES')
# else:
#    print('NO')
# -----------------------------------------------------------------------------------------------------

# Упорядоченные цифры
# Дано натуральное число. Напишите программу, которая определяет, является ли последовательность его
# цифр при просмотре справа налево упорядоченной по неубыванию.
# Формат входных данных: На вход программе подается одно натуральное число.
# Формат выходных данных: Программа должна вывести «YES» если последовательность его цифр при просмотре
# справа налево является упорядоченной по неубыванию и «NO» в противном случае.
# n = int(input())
# max_digit = 0
# flag = 'YES'
# while n != 0:
#     digit = n % 10
#     n = n // 10
#     if digit < max_digit:
#         flag = 'NO'
#     max_digit = digit
# print(flag)
#
# n, flag = int(input()), 'YES'
# while n // 10 != 0:
#     x = n % 10
#     n = n // 10
#     if x > n % 10:
#         flag = 'NO'
# print(flag)

# ******************************************************************************************************
# 7.6 break, continue и else
# ******************************************************************************************************
# *** Наименьший делитель ***
# На вход программе подается число n>1. Напишите программу, которая выводит его наименьший отличный от 1 делитель.
# Формат входных данных: На вход программе подается одно натуральное число n.
# Формат выходных данных: Программа должна вывести наименьший делитель отличный от 1.
# Примечание: Используйте оператор break при обнаружении делителя.

# num = int(input())
# for i in range(2, num+1):
#     if num % i == 0:
#         break
# print(i)
# -----------------------------------------------------------------------------------------------------

# Следуй правилам
# На вход программе подается натуральное число n. Напишите программу, которая выводит числа от 1 до n
# включительно за исключением:
# - чисел от 5 до 9 включительно;
# - чисел от 17 до 37 включительно;
# - чисел от 78 до 87 включительно.
# Формат входных данных: На вход программе подается одно натуральное число n.
# Формат выходных данных: Программа должна вывести числа в соответствии с условием задачи, каждое на отдельной строке.
# Примечание: Используйте оператор continue.

# n = int(input())
# for i in range(1, n + 1):
#     if 5 <= i <= 9 or 17 <= i <= 37 or 78 <= i <= 87:
#         continue
#     print(i)
#
#
# for i in range(1, int(input()) + 1):
#     if i not in range(5, 10) and i not in range(17, 38) and i not in range(78, 88):
#         print(i)

# ******************************************************************************************************
# 7.7 Поиск ошибок и ревью кода
# ******************************************************************************************************
